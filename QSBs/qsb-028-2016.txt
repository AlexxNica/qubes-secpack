

             ---===[ Qubes Security Bulletin #28 ]===---

                          December 17, 2016


                Debian update mechanism vulnerability


Quick Summary
==============

The Debian Security Team has announced a security bug (DSA-3733-1) in
the signature verification of repository metadata, which might
potentially lead to privilege escalation [1] within a Debian-based VM
or VM template. The bug does _not_ allow to escape from a VM or to
attack other parts of the Qubes system, such as Dom0, hypervisor, nor
any of the other VMs (except for those based on the affected Debian
template). Nevertheless we decided to release this bulletin, because
if a template VM is affected, than all the AppVMs (qubes) based on
that particular template are affected.

Description of the bug
=======================

As described in [1]:

| Jann Horn of Google Project Zero discovered that APT, the high level
| package manager, does not properly handle errors when validating
| signatures on InRelease files. An attacker able to man-in-the-middle
| HTTP requests to an apt repository that uses InRelease files
| (clearsigned Release files), can take advantage of this flaw to
| circumvent the signature of the InRelease file, leading to arbitrary
| code execution.

Debian APT repository format include InRelease file, which is
cleasigned Release file. APT while verifying the file split it into
`Release` and `Release.gpg` to verify signature. But then it split
again initial `InRelease` file to strip the signature (and potential
leading or trailing garbage) to get actual `Release` file. Jann Horn
discovered that even though APT use exactly the same code to split the
file in both cases, it can be tricked to output different results in
those two calls. The loop processing input looks like this:

    bool SplitClearSignedFile(std::string const &InFile, FileFd * const ContentFile,
          std::vector<std::string> * const ContentHeader, FileFd * const SignatureFile)
    {
       FILE *in = fopen(InFile.c_str(), "r");
       if (in == NULL)
          return _error->Errno("fopen", "can not open %s", InFile.c_str());
	(...)
	   char *buf = NULL;
	   size_t buf_size = 0;
	   while (getline(&buf, &buf_size, in) != -1)
	   {

	(...)

According to the getline documentation, it may return -1 only in case of:

 - invalid arguments
 - end of file

Authors believe that arguments are correct, so the only other case
considered is end of file. But apparently '-1' may be also triggered by
out of memory error. This will result in output file being truncated.
If that happen during second InRelease split, before finding beginning
of the signed data (part which would be normally discarded), the
found (unverified) data will be used as Release file directly.

Attacker controlling some repository (either by breaking into that
server, or performing man-in-the-middle attack) may try to exploit
this vulnerability to substitute some package with a malicious one.
A package may contain post-installation scripts, which will be run
automatically by apt, resulting in compromise of the system - in case
of Qubes OS - this particular template, and consequently later all VMs
based on it.

To trigger out of memory condition during one but not the other call,
discoverer use[2] very long lines, which may not fit into limited
address space on 32-bit system, additionally constrained by ASLR.
This attack vector allow successful exploitation in about 1/4 tries.

The same attack vector isn't feasible for 64-bit systems (such as
Qubes VMs), because address space is much larger - especially larger
than available memory. But attacker may try to hit real out of memory
condition. This is much less reliable approach and should be easy to
spot by the user - operation will likely take very long time and disk
will be used extensively (because of writing data to swap).

Impact
=======

In theory this bug allows to take over any Debian 8 or Debian 9
template (which include also Whonix templates[3]), and consequently any
VM based on it. But for the reasons explained above, configuration
used in Qubes OS incidentally makes it hard to exploit. Nevertheless,
one should never underestimate creativity of exploit authors, and thus
should assume the bug is exploitable and patch immediately, just to
stay on the safe side.

Additional Discussion
======================

Normally we do not release Qubes Security Bulletins (QSB) to addresses
vulnerabilities that affect only insides of the VMs, while not
allowing to directly affect the rest of the Qubes OS system, i.e. to
undermine Qubes security model.

For example, we do not release QSBs to address bugs in Firefox or
Linux kernel USB stacks, because Qubes OS has actually been designed
with the primary assumption that in a typical desktop OS there will be
countless of such bugs anyway and the humankind will never be able to
patch all of them promptly (i.e. before developers introduce another
bugs). This, in fact, is the very reason we created Qubes OS, which
uses the Security by Compartmentalization approach instead.

The Debian updater bug discussed today is, however, somehow special.
While indeed a bug affecting the inside of the VM only, it might
directly allow to compromise Qubes template VMs, which are used as a
basis to create the actual AppVMs which operate on the user data. If
the template gets compromised than all the VMs based on the particular
template will get compromised.

In Qubes OS we take special precautions to make templates difficult to
compromise. This include e.g. default networking rules (as imposed by
default firewall VM(s)) to prevent any networking connectivity for the
template. We only make one exception: allow template to connect to
so-called Update Proxy (which runs in the firewall VM), which allows
the template VM to retrieve repository metadata and the actual
(signed) packages (RPMs or DEBs).

In case of the bug discussed here, this very template updating
mechanism might get compromised despite our efforts to secure this
very part. Hence the QSB.

We should however point out that Qubes OS does make a good job in
handling this kind of a vulnerability. Indeed, instead of the need to
reinstall the whole system from scratch, on Qubes OS one needs to only
reinstall (one of) the template(s).

If one is further afraid that a potential attacker might have
compromised not only the root filesystem of the template, but also
attempted to infect some of the user files in home directories (e.g.
~/.bashrc or a Web browser profile directory) Qubes allows to mount
each of the suspected AppVM private images into another (trusted) VM,
based on our Fedora or patched Debian template, for "offline" analysis
and cleanup, allowing to preserve user data.

Patching
=========

The specific packages that resolve the problem discussed in this
bulletin has been released by Debian Security Team to appropriate
repository. See upstream advisory[1] for more details.

As the bug affect Debian templates itself, just applying update may
not be enough if it is already compromised. Users, especially those
using Debian-based VMs for sensitive tasks, should removing the
template and installing fresh one. This is documented as "Manual
Reinstallation Method" in Qubes documentation[5]. 

Fixed apt packages are included in:

* qubes-template-debian-8-TODO

Please note that simplified template reinstallation method described
in documentation is not sufficient, because it will download old, still
vulnerable template.

If you have a custom Debian-based template(s), you need to remove it
too and clone again from the one just reinstalled.

Alternative patching, for less sensitive templates
==================================================

If you don't use Debian-based VMs for any sensitive tasks you may
choose to just install fixed apt packages.

As the bug is present in update mechanism itself, special case should
be taken during performing the update:

1. Open terminal in affected template(s).
2. Download repository metadata:

    sudo apt-get update

3. Verify if none of downloaded `InRelease` file contain lines longer
than 1024[4]:

    wc -L /var/lib/apt/lists/*InRelease

4. If not, continue with update:

    sudo apt-get dist-upgrade

Credits
========

This bugs has been found by Jonn Horn of Google Project Zero and
reported to Debian Security Team.

Discussion of the bug and exploitation provided by Marek
Marczykowski-GÃ³recki of the Qubes OS project.

Additional discussion of bug importance for Qubes OS by Joanna
Rutkowska of Qubes OS project.

References
===========

[1] https://www.debian.org/security/2016/dsa-3733
[2] https://bugs.launchpad.net/ubuntu/+source/apt/+bug/1647467
[3] https://www.whonix.org/wiki/CVE-2016-1252
[4] https://lists.debian.org/debian-security/2016/12/msg00010.html
[5]
https://www.qubes-os.org/doc/reinstall-template/#manual-reinstallation-method

--
The Qubes Security Team
https://www.qubes-os.org/security/
